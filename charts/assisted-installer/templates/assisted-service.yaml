apiVersion: apps/v1
kind: Deployment
metadata:
  name: assisted-service
  namespace: assisted-installer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assisted-service
  template:
    metadata:
      labels:
        app: assisted-service
    spec:
      containers:
      - env:
        - name: KAFKA_BOOTSTRAP_SERVER
          value: ai-kafka-0.ai-kafka-headless.assisted-installer.svc.cluster.local:9092
        - name: KAFKA_EVENT_STREAM_TOPIC
          value: events-stream
        - name: DEPLOYMENT_TYPE
          value: SaaS
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: db.host
              name: assisted-installer-rds
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: db.name
              name: assisted-installer-rds
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              key: db.password
              name: assisted-installer-rds
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              key: db.port
              name: assisted-installer-rds
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db.user
              name: assisted-installer-rds
        - name: OCM_SERVICE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: ocm-service.clientId
              name: assisted-installer-sso
        - name: OCM_SERVICE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: ocm-service.clientSecret
              name: assisted-installer-sso
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws_secret_access_key
              name: assisted-installer-s3
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws_access_key_id
              name: assisted-installer-s3
        - name: S3_REGION
          valueFrom:
            secretKeyRef:
              key: aws_region
              name: assisted-installer-s3
        - name: S3_BUCKET
          valueFrom:
            secretKeyRef:
              key: bucket
              name: assisted-installer-s3
        - name: S3_ENDPOINT_URL
          valueFrom:
            secretKeyRef:
              key: endpoint
              name: assisted-installer-s3
        - name: EC_PUBLIC_KEY_PEM
          valueFrom:
            secretKeyRef:
              key: ec-public-key.pem
              name: assisted-installer-local-auth-key
        - name: EC_PRIVATE_KEY_PEM
          valueFrom:
            secretKeyRef:
              key: ec-private-key.pem
              name: assisted-installer-local-auth-key
        - name: S3_USE_SSL
          value: 'false'
        - name: LOG_LEVEL
          value: debug
        - name: LOG_FORMAT
          value: text
        - name: INSTALL_RH_CA
          value: 'false'
        - name: REGISTRY_CREDS
          value: ''
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /etc/.aws/credentials
        envFrom:
        - configMapRef:
            name: assisted-service-config
        image: {{ .Values.assistedService.image.repository }}:{{ .Values.assistedService.image.tag | default "latest" }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.assistedService.port }}
          initialDelaySeconds: 30
        name: assisted-service
        ports:
        - containerPort: {{ .Values.assistedService.port }} 
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.assistedService.port }}
          initialDelaySeconds: 30
        resources:
          limits:
            cpu: 500m
            memory: 2000Mi
          requests:
            cpu: 300m
            memory: 400Mi
        volumeMounts:
        - mountPath: /etc/.aws
          name: route53-creds
          readOnly: true
        - mountPath: /etc/pki/ca-trust/extracted/pem/mirror_ca.pem
          name: mirror-registry-ca
          readOnly: true
          subPath: mirror_ca.pem
        - mountPath: /etc/containers
          name: mirror-registry-conf
          readOnly: true
      serviceAccountName: assisted-service
      volumes:
      - name: route53-creds
        secret:
          optional: true
          secretName: route53-creds
      - configMap:
          defaultMode: 420
          items:
          - key: ca-bundle.crt
            path: mirror_ca.pem
          name: mirror-registry-ca
          optional: true
        name: mirror-registry-ca
      - configMap:
          defaultMode: 420
          items:
          - key: registries.conf
            path: registries.conf
          name: mirror-registry-ca
          optional: true
        name: mirror-registry-conf
